conda env remove -n env_lab_oon

conda env remove -n env_lab_oon

conda create -n env_lab_oon python=3.7 //create env
conda activate env_lab_oon
conda list //list packages inside env
conda deactivate


dentro terminale pycharm
to run another env
using command of conda or change preferences of python intepreter

git checkout -b develop : create new branch named develop


git checkout main: torno branch inziiale


Python Command
int_var = 3
type(int_var)
<class 'int'>
flt_var = 3.0
type(flt_var)
<class 'float'>
str1 = 'OpenOptical'
str2 = 'Networks'
print(str1+str2)
OpenOpticalNetworks
true_bool = True
true_bool
True
false_bool = False
empty_list = []
list1 = [1.0, 3.2]
list2 = [1, 3.0, True, 'apple']
list2
[1, 3.0, True, 'apple']
list2[0]
1
list2[-1]
'apple'
list2[1:3]
[3.0, True]
list2[1] = 'orange'
list2
[1, 'orange', True, 'apple']
print(list2)
[1, 'orange', True, 'apple']
l1 = [0, 1, 2, 3, 4]
l2 = l1
l1[0] = 10
l2 = list(l1)
l1[0] = 9
empty_dict = {}
dict1 = {'month' : 3, 'year': 2019}
print(dict1['month'])
3
dict1['month'] = 4
dict2 = dict1
dict1['year'] = 2018
dict2 = dict(dict1)
dict1['year'] = 2017
list_3 =[0,1,2,3,4,5,]
if list_3[0]> list_3[1]:
...     list_3[0] = list[1]
... else:
...     list_3[0] = 10
...     
i = 5
while 3 > i:
...     i += 1
...     print(i)
...     
for i in range(0,10):
...     print(i)
...     
0
1
2
3
4
5
6
7
8
9
for element in l1:
...     print(element)
...     
9
1
2
3
4
for i, el in enumerate(li): 
...     print(element)
...     
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'li' is not defined
for i, element in enumerate(li): 
...     print(element)
...     print(i)
...     
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'li' is not defined
for i, element in enumerate(l1): 
...     print(element)
...     print(i)
...     
9
0
1
1
2
2
3
3
4
4
dict1
{'month': 4, 'year': 2017}
for k in dict1:
...     print(k)
...     
month
year
squares = []
for x in range(10):
...     squares.append(x**2)
...     
squares2 = list(map(lambda x: x**2, range(10)))
#faster
squares3 = [x**2]
squares4 = [x**2 for x in range(10)]
#much faster
#Set: collection of unordered without index array
# dont have key 
set1 = {True, 'apple', 1.0}
#no number in sequence
for x in set1:
...     print(x)
...     
True
apple
#Tuple: collection of ordered and unchangeble elements
tuple1 = {'apple', 'orange'}
tuple1[0]
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: 'set' object is not subscriptable
tuple1[0]
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: 'set' object is not subscriptable
tuple1 = ('apple', 'orange')
tuple1[0]
'apple'
list_tuple1 = list(tuple1)
list_tuple1[0] = 'pear'
tuple1 = tuple(list_tuple1)

